import java.util.*;
import java.net.*;
import java.nio.Buffer;
import java.awt.Desktop.*;
import java.awt.*;
import java.io.*;
public class Java_Trojan_Socket_Backdoor_Server {
    

    private ServerSocket server;
    private Socket program;
    private static BufferedReader in;
    private static PrintWriter out;

    public SocketMan(int port) throws IOException{

        server = new ServerSocket(port);
        program = server.accept();
        out = new PrintWriter(program.getOutputStream(), true);
        in = new BufferedReader(new InputStreamReader(program.getInputStream()));
        String greeting = in.readLine();
            if ("Connect".equals(greeting)) {
                out.println("Hello Bot");
            }
            else {

                out.println("unrecognised greeting");

            }
    
        }

private static class listen extends Thread{

    public void run(){


        try{
        while(true){
            
            System.out.println(in.readLine());
        
            if(in.readLine().equals("bye")){
                out.println("Adios kiddo");
                break;
            }

        }
        System.exit(0);
            }

        catch(Exception e){

            System.out.println(e.getMessage());

        }




    }


}

    public static void sendOutput(String output)throws Exception{

        out.println(output);

}


        public static void main(String[] args) throws IOException{
            

            new SocketMan(9351);
            new listen().start();

            Scanner keyboard = new Scanner(System.in);

            while(true){

                System.out.println("Server: ");
                String s = keyboard.nextLine();
                
                try{
                sendOutput(s);
                }
                catch(Exception e){
                    System.out.println(e.getMessage());
                }
                
                if(s.equals("close")){
                    keyboard.close();
                    System.exit(0);

                }

            }


        }
    }
